{"version":3,"sources":["sounds/Door Buzzer-SoundBible.com-1567875395.mp3","images/utvdnscore.png","Components/Menu.js","Components/Home.js","Components/Scoreboard.js","Components/GameCreator.js","Components/Login.js","Components/UserHome.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","open","state","logout","axios","get","then","props","updateUser","catch","err","console","log","hamMenu","react_default","a","createElement","className","onClick","id","Link","to","Component","Home","src","utVdnScore","alt","Scoreboard","addOneT1","score1","addTwoT1","addThreeT1","minusOneT1","addOneT2","score2","addTwoT2","addThreeT2","minusOneT2","addPeriod","period","newQtr","minusPeriod","homePossessionToggle","homePossession","awayPossession","awayPossessionToggle","time","possessionDisplay","Fragment","clockBtns","clockStarted","handleClockStop","contCountDown","startCountDown","clock","minutes","seconds","style","color","border","autoPlay","buzzer","type","display","team1","team2","closeScoreboard","GameCreator","addGame","post","error","alert","response","request","handleStartGame","visible","periodMinutes","handleStartSavedGame","userGame","userGames","filter","game","game_id","teamOne","team_one","teamTwo","team_two","minutes_per_period","handleInputChange","event","defineProperty","target","name","value","handleClear","window","confirm","tick","min","Math","floor","secondsRemaining","sec","clearInterval","intervalHandle","setInterval","clockStopped","clockRunning","autoplay","sport","user","_this2","map","index","key","concat","fontSize","deleteGame","src_Components_Scoreboard","onChange","maxLength","required","max","placeholder","Login","showLogin","login","register","showRegister","reister","email","password","handleSubmitNew","_this$state","handleSubmitLogin","_this$state2","res","data","form","UserHome","getMyGames","games","toggleHandler","newGameToggle","userLoggedIn","delete","prevState","src_Components_Login","src_Components_GameCreator","App","HashRouter","src_Components_Menu","Switch","Route","exact","path","render","src_Components_Home","assign","src_Components_UserHome","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.253f34c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Door Buzzer-SoundBible.com-1567875395.ba182369.mp3\";","module.exports = __webpack_public_path__ + \"static/media/utvdnscore.9ff12705.png\";","import React, { Component } from 'react';\n// import './App.css';\nimport './Menu.css'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\n\n\n\nclass Menu extends Component {\n  constructor(){\n    super()\n    this.state = {\n      open: false,\n    }\n  }\n\n  handleClick = () => {\n    this.setState({\n        open: !this.state.open\n    });\n  }\n\n  logout = () => {\n    axios\n      .get('/auth/logout')\n      .then(() => {\n        this.props.updateUser({});\n      })\n      .catch(err => console.log(err));\n  }\n\n\n\n//   handleClick = (x) => {\n//     x.classList.toggle(\"change\");\n//   }\n\n  render() {\n    let hamMenu = null;\n    if (!this.state.open) {\n        hamMenu = (\n            <div>\n                <div className=\"hamburgerContainer\" onClick={this.handleClick}>\n                    <div className=\"bar1\"></div>\n                    <div className=\"bar2\"></div>\n                    <div className=\"bar3\"></div>\n                </div>\n                <div className='menu-list-close'>\n                    <ul>\n                        {/* <li><Link id='hamLink'to='/login'>login/Create account</Link></li> */}\n                        <li><Link id='hamLink'to='/gamecreator'>quick start</Link></li>\n                        {/* <li><Link id='hamLink'to='/'>home</Link></li> */}\n                    </ul>\n                </div>\n             </div>\n        ) \n    } else {\n        hamMenu = (\n            <div>\n                <div className=\"change\" onClick={this.handleClick}>\n                    <div className=\"bar1\" id='bar1'></div>\n                    <div className=\"bar2\"></div>\n                    <div className=\"bar3\"></div>\n                </div>\n                <div className='menu-list-open'>\n                    <ul>\n                        {/* <li><Link id='hamLink'to='/gamecreator' onClick={this.handleClick}>quick start</Link></li> */}\n                        <li><Link id='hamLink'to='/'onClick={this.handleClick}>home</Link></li>\n                        <li><Link id='hamLink'to='/userhome' onClick={this.handleClick} >MY GAMES/LOGIN</Link></li>\n                        {/* <li><Link id='hamLink'to='/login' onClick={this.handleClick}>login</Link></li> */}\n                        {/* <li onClick={this.logout}>LOGOUT</li> */}\n                    </ul>\n                </div>\n            </div>\n        ) \n    }\n\n    return (\n      <div>\n\n        <div className='menu-container'>\n            <div className=\"menu-header\">\n                <h2>MY SCOREBOARD APP</h2>\n                \n                {hamMenu} \n            </div>\n          \n        </div>\n        \n      </div>  \n        \n\n\n\n    );\n  }\n}\n\nexport default Menu;","import React, { Component } from 'react';\n// import './App.css';\nimport './Home.css'\nimport utVdnScore from '../images/utvdnscore.png'\n\n\nclass Home extends Component {\n\n  render() {\n    \n    return (\n      <div className='home-container'>\n        <div className=\"home-body\">\n          <h3>WELCOME TO <br/> MY SCOREBOARD APP</h3>\n          <p>Please create an account and start keeping score for your games today!</p>\n          <img src={utVdnScore} alt='scoreboard app screenshot'/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './Scoreboard.css'\nimport buzzer from '../sounds/Door Buzzer-SoundBible.com-1567875395.mp3'\n\n\nclass Scoreboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            score1: 0,\n            score2: 0,\n            homePossession: true,\n            awayPossession: false,\n            time: this.props.time,\n            period: 1\n        }      \n        \n    }\n    addOneT1 = () =>  {\n        this.setState({ score1: this.state.score1 + 1})\n    };\n    addTwoT1 = () =>  {\n        this.setState({\n            score1: this.state.score1 + 2})\n    };\n    addThreeT1 = () =>  {\n        this.setState({\n            score1: this.state.score1 + 3})\n    };\n    minusOneT1 = () =>  {\n        this.setState({\n            score1: this.state.score1 - 1})\n    };\n    addOneT2 = () =>  {\n        this.setState({\n            score2: this.state.score2 + 1})\n    };\n    addTwoT2 = () =>  {\n        this.setState({\n            score2: this.state.score2 + 2})\n    };\n    addThreeT2 = () =>  {\n        this.setState({\n            score2: this.state.score2 + 3})\n    };\n    minusOneT2 = () =>  {\n        this.setState({\n            score2: this.state.score2 - 1})\n    };\n\n    addPeriod = () => {\n        this.setState({\n            period: this.state.period + 1\n        })\n        this.props.newQtr();\n    }\n    minusPeriod = () => {\n        this.setState({\n            period: this.state.period - 1\n        })\n    }\n\n    homePossessionToggle = () => {\n        this.setState({\n            homePossession: true,\n            awayPossession: false\n        })\n    }\n    awayPossessionToggle = () => {\n        this.setState({\n            homePossession: false,\n            awayPossession: true\n        })\n    }\n\n\n  render(){\n\n    let possessionDisplay = null;\n    if (this.state.homePossession) {\n        possessionDisplay = (\n        <>\n            <h3 className='poss1' id='possYes'>POSS</h3>\n            <h3 className='poss2' id='possNo'>POSS</h3>\n        </>\n        )\n    } else if(!this.state.homePossession) {\n        possessionDisplay = (\n        <>\n            <h3 className='poss1' id='possNo'>POSS</h3>\n            <h3 className='poss2' id='possYes'>POSS</h3>\n        </>\n        )\n    }\n\n    let clockBtns = null;\n    if (this.props.clockStarted){  \n        clockBtns = (\n        <>\n            <button id='timeBtn'>start period</button>\n            <button onClick={this.props.handleClockStop} id='timeBtn'>stop</button>\n            <button onClick={this.props.contCountDown} id='timeBtn'>resume</button>\n        </>\n        )\n    } else {\n        clockBtns = (\n            <>\n            <button onClick={this.props.startCountDown} id='timeBtn'>start period</button>\n            <button onClick={this.props.handleClockStop} id='timeBtn'>stop</button>\n            <button onClick={this.props.contCountDown} id='timeBtn'>resume</button>\n        </>\n        )\n    }\n    let clock = null;\n    \n    if (this.props.minutes < 1 & this.props.seconds === '00'){\n    clock = (\n        <>\n        <h1 className='clock' id='scoreNum' style={{color: 'red', border: '2.5px solid red'}}>{this.props.minutes}:{this.props.seconds}</h1>\n        <audio autoPlay src={buzzer} type=\"audio/mpeg\" style={{display: 'none'}}/>\n        </>\n\n    )\n    } else {\n    clock = (\n        <h1 className='clock'id='scoreNum' style={{color: 'rgb(255, 196, 0)', border: '2.5px solid white'}}>{this.props.minutes}:{this.props.seconds}</h1>\n    )\n    }\n    \n\n    \n\n    return (\n        <div className='scoreboardAndControlsContainer'>\n            {/*scoreboard display*/}\n            <div className='scoreboardBody' id='scoreboardBody'>\n                <div className='scoreboardContainer'>\n                    <div className='scoreboardTop'>\n                        {clock}\n                        {possessionDisplay} \n                    </div>\n                    <div className='scoreBoardBottom'>\n                      <div className='team1'>\n                        <h3 id='team1'>{this.props.team1}</h3>\n                        <h1 id='scoreNum'>{this.state.score1}</h1>\n                      </div>\n                      <div className='per'>\n                        <p>PER:</p>\n                        <h1>{this.state.period}</h1>\n                      </div>\n                      <div className='team2'>\n                        <h3 id='team2'>{this.props.team2}</h3>\n                        <h1 id='scoreNum'>{this.state.score2}</h1>\n                      </div>\n                    </div>\n                </div>\n            </div>\n            {/* scoreboard control panel */}\n            <div className='ctrls'>\n                <div className='timeCtrl'>\n                    <p>time:</p>\n                    {clockBtns}\n                    {/* <input type='time'></input> */}\n                    <button onClick={this.props.newQtr} id='timeBtn'>reset</button>\n                    <h4>p:</h4> <button className='perBtn' onClick={this.addPeriod}>+</button>\n                    <button className='perBtn' onClick={this.minusPeriod}>-</button>\n                </div>\n                <div className='teamCtrls'>\n                    <div className='team1Ctrl'>\n                    <h4>{this.props.team1}</h4>\n                    <button className='possBtn' onClick={this.homePossessionToggle}>possession</button>\n                        <div>\n                            <button id='scoreBtnAdd' onClick={this.addOneT1}>+1</button>\n                            <button id='scoreBtnAdd' onClick={this.addTwoT1}>+2</button>\n                            <button id='scoreBtnAdd' onClick={this.addThreeT1}>+3</button>\n                            <button id='scoreBtnMinus' onClick={this.minusOneT1}>-1</button>\n                        </div>\n                    </div>\n                    <div className='team2Ctrl'>\n                    <h4>{this.props.team2}</h4>\n                    <button className='possBtn' onClick={this.awayPossessionToggle}>possession</button>\n                        <div>\n                            <button id='scoreBtnAdd' onClick={this.addOneT2}>+1</button>\n                            <button id='scoreBtnAdd' onClick={this.addTwoT2}>+2</button>\n                            <button id='scoreBtnAdd' onClick={this.addThreeT2}>+3</button>\n                            <button id='scoreBtnMinus' onClick={this.minusOneT2}>-1</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='closeContainer'>\n                <button id='closeBtn' onClick={this.props.closeScoreboard}>close controls</button>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Scoreboard","import React, { Component } from 'react'\n// import './App.css';\nimport './GameCreator.css'\nimport Scoreboard from './Scoreboard'\nimport axios from 'axios'\nimport buzzer from '../sounds/Door Buzzer-SoundBible.com-1567875395.mp3'\n\n\n\nclass GameCreator extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            teamOne: 'HOME',\n            teamTwo: 'AWAY',\n            minutes: 0,\n            seconds: '00',\n            visible: false,\n            clockStarted: false,\n            clockStopped: true,\n            clockRunning: false,\n            periodMinutes: '',\n            sport: 'basketball',\n            user: {},\n            game_id: 0,\n\n        }\n        \n    }\n\n    addGame = () => {\n        // const { sport, teamOne, teamTwo, periodMinutes} = this.state;\n        axios\n            .post('/api/game', this.state)\n            .catch(error => { \n                console.log(error);\n                alert(error.response.request.response)\n            })\n\n            \n    }\n\n\n    handleStartGame = () => {\n        this.setState({\n            visible: true,\n            minutes: this.state.periodMinutes\n        });\n        // if(session.user){ \n        // }\n        this.addGame();\n\n    }\n\n    handleStartSavedGame = (id) => {\n        let userGame = this.props.userGames.filter(game => game.game_id === id);\n        // console.log(this.props.userGames.filter(game => game.game_id === id));\n            // console.log(userGame[0].team_one);\n            this.setState({\n                teamOne: userGame[0].team_one,\n                teamTwo: userGame[0].team_two,\n                periodMinutes: userGame[0].minutes_per_period,\n                minutes: userGame[0].minutes_per_period,\n                visible: true,\n            });    \n    }\n\n    handleInputChange = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n        console.log(this.state);\n    }\n\n    handleClear = () => {\n        this.setState({\n            teamOne: 'HOME',\n            teamTwo: 'AWAY',\n            minutes: 0,\n            seconds: '00',\n            visible: false,\n            clockStarted: false,\n            periodMinutes: '', \n        })\n    }\n\n\n    closeScoreboard = () => {\n        const endGameConfirm = window.confirm('This will end your current game, do you wish to continue?');\n        if(endGameConfirm){\n            this.setState({\n                visible: false\n            })\n            this.handleClear();\n            this.handleClockStop();\n        }\n    }\n    \n\n\n\n    tick = () => {\n        var min = Math.floor(this.secondsRemaining / 60);\n        var sec = this.secondsRemaining - (min * 60);\n\n        this.setState({\n            minutes: min,\n            seconds: sec\n        })\n        \n        if (sec < 10) {\n            this.setState({\n                seconds: \"0\" + this.state.seconds,\n            })\n        }\n        if (min < 10) {\n            this.setState({\n                minutes: \"0\" + min,\n            })\n        }\n        \n        if (min === 0 & sec === 0) {\n            clearInterval(this.intervalHandle);\n        }\n\n        \n        \n        this.secondsRemaining--\n        \n    }\n\n    startCountDown = () => {\n        this.intervalHandle = setInterval(this.tick, 1000);\n        let time = this.state.minutes;\n        this.secondsRemaining = time * 60;\n        this.setState({\n            clockStarted: true, clockStopped: false\n        })\n        console.log(this.state)\n    }\n    contCountDown = () => {\n        if(this.state.minutes === 0 && this.state.seconds === '00'){\n            console.log('does not work in current state');\n        } else if(this.state.clockStarted && this.state.clockStopped){\n            this.intervalHandle = setInterval(this.tick, 1000);\n            this.setState({\n                clockStopped: false, clockRunning: true\n            })\n        }\n        console.log(this.state)\n    }\n\n\n    handleClockStop = () => {\n        clearInterval(this.intervalHandle);\n        this.setState({\n            clockStopped: true,\n            clockRunning: false\n            \n        })\n        console.log(this.state)\n    }\n    newQtr = () => {\n        if(this.state.clockStarted) {\n            if(this.state.minutes < 1) {\n                if(this.state.seconds === '00'){\n                    this.setState({\n                        clockStarted: false,\n                        clockStopped: true,\n                        clockRunning: false,\n                        minutes: this.state.periodMinutes\n                    })\n                }\n            }\n            \n        }\n        console.log(this.state)\n    }\n\n\n    buzzer = () => {\n        if(this.state.clockStarted && this.state.clockRunning){\n            if(this.state.minutes === 0 && this.state.seconds === '00') {\n                return (\n                    <audio autoplay>\n                        <source src={buzzer} type='audio/mp3'/>\n                    </audio>\n                )\n            }\n        }\n    }\n\n    \n\n\n  render() {\n    let userGames = this.props.userGames.map((game, index) => {\n        return (\n            <div\n            key={`games${index}`}\n            >\n                <div className='startForm'>\n                    <h3>SAVED GAME</h3>\n                    <>\n                        <div> \n                            <div>\n                            team one: <span style={{color: '#D53900', fontSize: '4vmin'}}>{game.team_one}</span>\n                            </div>              \n                            {/* <input \n                                    type='text' \n                                    className='frmInput'\n                                    name='team_one'\n                                    placeholder={game.team_one}\n                                    value={this.state.team_one}\n                                    onChange={this.handleEditInput}\n                                    maxLength='4'\n                                    /> */}\n                        </div> \n                        <div>\n                            team two: <span style={{color: '#D53900', fontSize: '4vmin'}}>{game.team_two}</span>\n                            {/* <input \n                                    type='text' \n                                    className='frmInput'\n                                    name='team_two'\n                                    value={this.state.team_two}\n                                    placeholder={game.team_two}\n                                    onChange={this.handleInputChange}\n                                    maxLength='4'\n                                    /> */}\n                        </div> \n                        <div>\n                        {/* <br/> */}\n                        min per period: <span style={{color: '#D53900', fontSize: '4vmin'}}>{game.minutes_per_period}</span>\n                        {/* <input \n                                type='number'\n                                required\n                                className='frmInput'\n                                min='1'\n                                max='60'\n                                name='minutes_per_period'\n                                // placeholder={game.minutes_per_period}\n                                // defaultValue={game.minutes_per_period}\n                                value={this.state.minutes_per_period}\n                                onChange={this.handleInputChange}\n                                /> */}\n                        </div>\n                        <div>\n                            <button id='btnL' className='frmBtn' onClick={() => this.handleStartSavedGame(game.game_id)}>START GAME</button>\n                            {/* <button className='frmBtn' onClick={() => this.handleEdit(game.game_id)}>EDIT</button> */}\n                            <button id='btnR' className='frmBtn' onClick={() => this.props.deleteGame(game.game_id)}>DELETE</button>\n                        </div>\n                    </>\n                </div>\n            </div>\n        )\n    })\n    return (\n      <div className='gameCreator-container'>\n          {!this.state.visible ? (\n            <>\n                <div className='startForm'>\n                    <h3>NEW GAME</h3>\n                    {/* <br/> */}\n                    <>\n                        <div>               \n                            team one:\n                            <input \n                                    type='text' \n                                    className='frmInput'\n                                    name='teamOne'\n                                    value={this.state.teamOne}\n                                    onChange={this.handleInputChange}\n                                    maxLength='4'\n                                    />\n                        </div> \n                        <div>\n                            team two: \n                            <input \n                                    type='text' \n                                    className='frmInput'\n                                    name='teamTwo'\n                                    value={this.state.teamTwo}\n                                    onChange={this.handleInputChange}\n                                    maxLength='4'\n                                    />\n                        </div> \n                        <div>\n                        {/* <br/> */}\n                        Minutes Per Period: <input \n                                type='number'\n                                required\n                                className='frmInput'\n                                min='1'\n                                max='60'\n                                name='periodMinutes'\n                                placeholder='0'\n                                value={this.state.periodMinutes}\n                                onChange={this.handleInputChange}\n                                />\n                        </div>\n                        <div>\n                            <button id='btnL' className='frmBtn' onClick={this.handleStartGame}>START GAME</button>\n                            <button id='btnR'className='frmBtn' onClick={this.handleClear}>CLEAR</button>\n                        </div>\n                    </>\n                </div>\n                {userGames}\n            </>\n\n          ) : (\n            \n            <Scoreboard \n                team1={this.state.teamOne}\n                team2={this.state.teamTwo}\n                visible={this.state.visible}\n                minutes={this.state.minutes}\n                seconds={this.state.seconds}\n                startCountDown={this.startCountDown}\n                handleClockStop={this.handleClockStop}\n                contCountDown={this.contCountDown}\n                clockStarted={this.state.clockStarted}\n                clockStopped={this.state.clockStopped}\n                clockRunning={this.state.clockRunning}\n                newQtr={this.newQtr}\n                closeScoreboard={this.closeScoreboard}\n                buzzer={this.buzzer}\n                />\n            \n\n          )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default GameCreator;","import React, { Component } from 'react'\n// import './App.css';\nimport './Login.css'\nimport axios from 'axios'\n\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            login: false,\n            register: false,\n            \n\n        }    \n    }\n\n\n    showLogin = () => {\n        if(!this.state.login){\n            this.setState({\n                login: !this.state.login,\n                register: false\n            })\n        } else if (this.state.login){\n            this.setState({\n                login: false,\n                register: false\n            })\n        }\n    }\n\n    showRegister = () => {\n        if(!this.state.register){\n            this.setState({\n                register: !this.state.reister, \n                login: false\n            })\n        } else if(this.state.register){\n            this.setState({\n                login: false,\n                register: false\n            })\n        }\n    }\n\n    handleClear = () => {\n        this.setState({\n            email: '',\n            password: '',\n        })\n        this.showLogin();\n        this.showRegister();\n    }\n\n    handleSubmitNew = () => {\n        const { email, password } = this.state;\n        axios   \n            .post('/auth/register', { email, password })\n            .then(user => {\n                this.setState({email: '', password: ''});\n                alert('Success! Please log in with your newly created credentials.');\n            })\n            .catch(err => {\n                this.setState({email: '', password: ''});\n                alert(err.response.request.response);\n            })\n    };\n\n    handleSubmitLogin = () => {\n        // e.preventDefault();\n        const { email, password } = this.state;\n        axios.post('/auth/login', { email, password })\n            .then(res => {\n                const user = res.data;\n                this.props.updateUser(user);\n                this.setState({email: '', password: '', })\n            \n            })\n            .catch(err => console.log(err.response.request.response));\n            \n    }\n\n\n\n\n    handleInputChange = (event) => {\n        this.setState({[event.target.name]: event.target.value });\n        console.log(this.state);\n    }\n\n\n\n\n  render() {\n    let form = null;\n    if(this.state.login){\n        form = (\n            <>\n                <div className='login-form' id='login'>\n                    <h3>login:</h3>\n                    <div>\n                    email: <input \n                                className='frmInput'\n                                type='text'\n                                name='email'\n                                value={this.state.email}\n                                onChange={this.handleInputChange}>\n                            </input>\n                    </div>\n                    <div>\n                    password: <input \n                                className='frmInput'\n                                type='text'\n                                name='password'\n                                value={this.state.password}\n                                onChange={this.handleInputChange}>\n                              </input>\n                    </div>\n                    <div>\n                        <button className='loginBtn' id='btnL2' onClick={this.handleSubmitLogin}>SUBMIT</button>\n                        <button className='loginBtn' id='btnR2' onClick={this.handleClear} >CANCEL</button>\n                    </div>\n                </div>\n            </>\n        )\n    } else if(this.state.register){\n        form = (\n            <>\n                <div className='login-form' id='register'>\n                    <h3>new account:</h3>\n                    <div>\n                    email: <input \n                                className='frmInput'\n                                type='text'\n                                name='email'\n                                value={this.state.email}\n                                onChange={this.handleInputChange}>\n                            </input>\n                    </div>\n                    <div>\n                    password: <input \n                                className='frmInput'\n                                type='text'\n                                name='password'\n                                value={this.state.password}\n                                onChange={this.handleInputChange}>\n                              </input>\n                    </div>\n                    <div>\n                        <button className='loginBtn' id='btnL2' onClick={this.handleSubmitNew}>SUBMIT</button>\n                        <button className='loginBtn' id='btnR2' onClick={this.handleClear}>CANCEL</button>\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n\n\n    return (\n      <div className='login-container'>\n          <div className='loginButtons'>\n              <button className='loginBtn' id='btnL' onClick={this.showLogin}>LOGIN</button>\n              <button className='loginBtn' id='btnM' onClick={this.showRegister}>CREATE ACCOUNT</button>\n              <button className='loginBtn' id='btnR' onClick={this.props.logout}>LOG OUT</button>\n          </div>\n          <div className='login-forms'>\n              {form}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react'\nimport './UserHome.css';\nimport GameCreator from './GameCreator'\nimport axios from 'axios'\nimport Login from './Login'\n\n\n\nclass UserHome extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userGames: [],\n            newGameToggle: true,\n            userLoggedIn: false,\n            user: {},\n\n        }    \n    }\n\n    getMyGames = () => {\n        axios\n        .get(`/api/games/user`)\n        .then( games => {\n            this.setState({\n                userGames: games.data            \n            });\n        })\n        .catch(error => alert(error.response.request.response));\n        // console.table(this.state.userGames);\n    }\n    \n    componentDidMount(){\n        // this.mounted = true;\n        this.getMyGames();\n        console.log(this.state);\n        \n    }\n\n    toggleHandler = () => {\n        this.setState({\n            newGameToggle: !this.state.newGameToggle\n        })\n        console.log(this.state);\n    }\n\n    logout = () => {\n        axios\n          .get('/auth/logout')\n          .then(() => {\n            this.props.updateUser({});\n          })\n          .catch(err => console.log(err));\n        this.setState({userLoggedIn: false})\n    }\n\n    updateUser = (user) => {\n        this.setState({\n          user,\n        })\n        this.setState({userLoggedIn: true});\n        this.getMyGames();\n        \n        console.log(this.state);\n\n    }\n\n    handleInputChange = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    deleteGame = (id) => {\n        axios.delete(`/api/game/${id}`)\n        .then(response => {\n            // console.log(games.data);\n            this.setState({userGames: response.data});\n        })\n       \n        // this.getMyGames();\n    }\n\n\n\n\n    componentDidUpdate(prevState) {\n        if (this.state.userGames !== prevState.userGames){\n            this.getMyGames();\n        }\n    }\n    \n\n    render(){\n\n        // let login = null;\n        // if (!this.state.userLoggedIn){\n        //     login = (\n        //         <>\n        //          <Login userLoggedIn={this.state.userLoggedIn} \n        //          updateUser={this.updateUser}\n        //          logout={this.logout}\n        //          />\n        //         </>\n        //     )\n        // } else {\n        //     login = (\n        //         <>\n        //             {/* <button className='loginBtn' id='logoutBtn' onClick={this.logout} >LOGOUT</button> */}\n        //         </>\n        //     )\n        // }\n\n\n        return(\n            <div className='user-container'>\n                <div>\n                    <Login userLoggedIn={this.state.userLoggedIn} \n                    updateUser={this.updateUser}\n                    logout={this.logout}\n                    />\n                    <GameCreator \n                    userGames={this.state.userGames}\n                    deleteGame={this.deleteGame}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserHome;","import React, { Component } from 'react';\n// import routes from './routes';\nimport './reset.css'\nimport './App.css';\nimport Menu from './Components/Menu'\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Home from './Components/Home';\nimport GameCreator from './Components/GameCreator'\nimport Scoreboard from './Components/Scoreboard'\nimport Login from './Components/Login'\nimport UserHome from './Components/UserHome'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n    };\n  }\n\n\n  updateUser = (user) => {\n    this.setState({\n      user,\n    });\n  }\n\n\n  render() {\n    const { user } = this.state\n    return (\n      <HashRouter>\n        <div className='App'>\n          <header className='App-header'>\n            <Menu user={user} updateUser={this.updateUser}/>\n          </header>\n          <main>\n            <Switch>\n              <Route exact path='/' render={(props) => <Home {...props} user={user} updateUser={this.updateUser}/>} />\n              <Route path='/gamecreator' render={(props) => <GameCreator {...props} user={user} updateUser={this.updateUser} />}/>\n              <Route path='/scoreboard' render={(props) => <Scoreboard {...props} user={user} updateUser={this.updateUser}/>} />\n              <Route path='/login' render={(props) => <Login {...props} user={user} updateUser={this.updateUser}/>} />\n              <Route path='/userhome' render={(props) => <UserHome {...props} user={user} updateUser={this.updateUser}/>} />\n            </Switch>\n          </main>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}